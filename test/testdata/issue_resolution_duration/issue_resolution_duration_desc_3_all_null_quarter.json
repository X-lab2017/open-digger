{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time))) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(resolution_levels,\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time))) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time))) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time))) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time))) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time))) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time))) AS quantile_4\nFROM\n(\n  SELECT\n    toStartOfQuarter(opened_at) AS time,\n    repo_id AS id, argMax(repo_name, time) AS name,\n    avg(resolution_duration) AS avg,\n    quantile(0)(resolution_duration) AS quantile_0,quantile(0.25)(resolution_duration) AS quantile_1,quantile(0.5)(resolution_duration) AS quantile_2,quantile(0.75)(resolution_duration) AS quantile_3,quantile(1)(resolution_duration) AS quantile_4,\n    [countIf(resolution_level = 0),countIf(resolution_level = 1),countIf(resolution_level = 2),countIf(resolution_level = 3)] AS resolution_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      argMaxIf(action, created_at, action IN ('opened', 'closed' , 'reopened')) AS last_action,\n      argMax(issue_created_at,created_at) AS opened_at,\n      maxIf(created_at, action = 'closed') AS closed_at,\n      dateDiff('day', opened_at, closed_at) AS resolution_duration,\n      multiIf(resolution_duration <= 3, 0,resolution_duration <= 7, 1,resolution_duration <= 15, 2, 3) AS resolution_level\n    FROM gh_events\n    WHERE type = 'IssuesEvent' AND (org_id IN [1342004])\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at >= toDate('2015-1-1') AND opened_at < toDate('2017-1-1') AND last_action='closed'\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "quarter",
    "groupBy": null
  },
  "issue_resolution_duration_desc_3_all_null_quarter": [{
    "id": "53168835",
    "name": "google/google-api-php-client-services",
    "avg": [null, null, null, null, null, 30.25, 1, 53],
    "levels": [
      [],
      [],
      [],
      [],
      [],
      ["2", "0", "1", "5"],
      ["3", "0", "0", "0"],
      ["0", "0", "0", "1"]
    ],
    "quantile_0": [null, null, null, null, null, 0, 0, 53],
    "quantile_1": [null, null, null, null, null, 9.25, 0.5, 53],
    "quantile_2": [null, null, null, null, null, 18.5, 1, 53],
    "quantile_3": [null, null, null, null, null, 45, 1.5, 53],
    "quantile_4": [null, null, null, null, null, 98, 2, 53]
  }, {
    "id": "34408310",
    "name": "google/code-prettify",
    "avg": [null, 468.18, 47.71, 109.5, 65, 16, 8.33, 38],
    "levels": [
      [],
      ["0", "0", "0", "34"],
      ["2", "2", "0", "3"],
      ["1", "0", "0", "1"],
      ["1", "0", "0", "1"],
      ["2", "0", "0", "2"],
      ["2", "0", "0", "1"],
      ["0", "0", "0", "1"]
    ],
    "quantile_0": [null, 117, 0, 0, 0, 0, 0, 38],
    "quantile_1": [null, 413, 2.5, 54.75, 32.5, 0.75, 0, 38],
    "quantile_2": [null, 448, 6, 109.5, 65, 11, 0, 38],
    "quantile_3": [null, 599, 80.5, 164.25, 97.5, 26.25, 12.5, 38],
    "quantile_4": [null, 600, 162, 219, 130, 42, 25, 38]
  }, {
    "id": "17029490",
    "name": "google/grr-doc",
    "avg": [null, 303, 134, null, 2.5, 7.5, 27, 37.75],
    "levels": [
      [],
      ["0", "0", "0", "1"],
      ["1", "0", "0", "2"],
      [],
      ["3", "0", "1", "0"],
      ["1", "0", "1", "0"],
      ["3", "0", "0", "1"],
      ["1", "0", "0", "3"]
    ],
    "quantile_0": [null, 303, 0, null, 0, 2, 0, 0],
    "quantile_1": [null, 303, 95, null, 0, 4.75, 0, 24.75],
    "quantile_2": [null, 303, 190, null, 0, 7.5, 0, 40],
    "quantile_3": [null, 303, 201, null, 2.5, 10.25, 27, 53],
    "quantile_4": [null, 303, 212, null, 10, 13, 108, 71]
  }]
}