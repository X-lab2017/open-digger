{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('year', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('year', toStartOfYear(toDate('2015-1-1')), time))) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('year', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(resolution_levels,\n    toUInt32(dateDiff('year', toStartOfYear(toDate('2015-1-1')), time))) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('year', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('year', toStartOfYear(toDate('2015-1-1')), time))) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('year', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('year', toStartOfYear(toDate('2015-1-1')), time))) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('year', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('year', toStartOfYear(toDate('2015-1-1')), time))) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('year', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('year', toStartOfYear(toDate('2015-1-1')), time))) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('year', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('year', toStartOfYear(toDate('2015-1-1')), time))) AS quantile_4\nFROM\n(\n  SELECT\n    toStartOfYear(opened_at) AS time,\n    repo_id AS id, argMax(repo_name, time) AS name,\n    avg(resolution_duration) AS avg,\n    quantile(0)(resolution_duration) AS quantile_0,quantile(0.25)(resolution_duration) AS quantile_1,quantile(0.5)(resolution_duration) AS quantile_2,quantile(0.75)(resolution_duration) AS quantile_3,quantile(1)(resolution_duration) AS quantile_4,\n    [countIf(resolution_level = 0),countIf(resolution_level = 1),countIf(resolution_level = 2),countIf(resolution_level = 3)] AS resolution_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      argMaxIf(action, created_at, action IN ('opened', 'closed' , 'reopened')) AS last_action,\n      argMax(issue_created_at,created_at) AS opened_at,\n      maxIf(created_at, action = 'closed') AS closed_at,\n      dateDiff('day', opened_at, closed_at) AS resolution_duration,\n      multiIf(resolution_duration <= 3, 0,resolution_duration <= 7, 1,resolution_duration <= 15, 2, 3) AS resolution_level\n    FROM gh_events\n    WHERE type = 'IssuesEvent' AND (org_id IN [1342004])\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at >= toDate('2015-1-1') AND opened_at < toDate('2017-1-1') AND last_action='closed'\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "year",
    "groupBy": null
  },
  "issue_resolution_duration_desc_3_all_null_year": [
    {
      "id": "11850014",
      "name": "google/gumbo-parser",
      "avg": [
        763.76,
        2562
      ],
      "levels": [
        [
          "12",
          "2",
          "2",
          "13"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ]
      ],
      "quantile_0": [
        0,
        2532
      ],
      "quantile_1": [
        1,
        2547
      ],
      "quantile_2": [
        9,
        2562
      ],
      "quantile_3": [
        2631,
        2577
      ],
      "quantile_4": [
        2911,
        2592
      ]
    },
    {
      "id": "12929998",
      "name": "google/gfw-deployments",
      "avg": [
        null,
        2431
      ],
      "levels": [
        [],
        [
          "0",
          "0",
          "0",
          "1"
        ]
      ],
      "quantile_0": [
        null,
        2431
      ],
      "quantile_1": [
        null,
        2431
      ],
      "quantile_2": [
        null,
        2431
      ],
      "quantile_3": [
        null,
        2431
      ],
      "quantile_4": [
        null,
        2431
      ]
    },
    {
      "id": "200125643",
      "name": "google/blockly-samples",
      "avg": [
        null,
        2390.5
      ],
      "levels": [
        [],
        [
          "0",
          "0",
          "0",
          "2"
        ]
      ],
      "quantile_0": [
        null,
        2315
      ],
      "quantile_1": [
        null,
        2352.75
      ],
      "quantile_2": [
        null,
        2390.5
      ],
      "quantile_3": [
        null,
        2428.25
      ],
      "quantile_4": [
        null,
        2466
      ]
    }
  ]
}