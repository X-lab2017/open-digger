{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(resolution_levels,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_4\nFROM\n(\n  SELECT\n    toStartOfMonth(opened_at) AS time,\n    org_id AS id, argMax(org_login, time) AS name,\n    avg(resolution_duration) AS avg,\n    quantile(0)(resolution_duration) AS quantile_0,quantile(0.25)(resolution_duration) AS quantile_1,quantile(0.5)(resolution_duration) AS quantile_2,quantile(0.75)(resolution_duration) AS quantile_3,quantile(1)(resolution_duration) AS quantile_4,\n    [countIf(resolution_level = 0),countIf(resolution_level = 1),countIf(resolution_level = 2),countIf(resolution_level = 3)] AS resolution_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      argMaxIf(action, created_at, action IN ('opened', 'closed' , 'reopened')) AS last_action,\n      argMax(issue_created_at,created_at) AS opened_at,\n      maxIf(created_at, action = 'closed') AS closed_at,\n      dateDiff('day', opened_at, closed_at) AS resolution_duration,\n      multiIf(resolution_duration <= 3, 0,resolution_duration <= 7, 1,resolution_duration <= 15, 2, 3) AS resolution_level\n    FROM gh_events\n    WHERE type = 'IssuesEvent' AND (org_id IN [1342004])\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at >= toDate('2015-1-1') AND opened_at < toDate('2017-1-1') AND last_action='closed'\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "month",
    "groupBy": "org"
  },
  "issue_resolution_duration_desc_3_all_org_month": [
    {
      "id": "1342004",
      "name": "google",
      "avg": [
        516.01,
        224.39,
        355.58,
        313.62,
        220.15,
        210.55,
        198.09,
        231.23,
        181.35,
        170.06,
        165.84,
        122.14,
        179.16,
        178.99,
        244.18,
        176.76,
        173.13,
        170.4,
        191.1,
        162.6,
        156.61,
        169.12,
        184.5,
        182.82
      ],
      "levels": [
        [
          "177",
          "48",
          "36",
          "509"
        ],
        [
          "164",
          "41",
          "31",
          "269"
        ],
        [
          "321",
          "56",
          "56",
          "486"
        ],
        [
          "304",
          "118",
          "64",
          "680"
        ],
        [
          "410",
          "72",
          "78",
          "390"
        ],
        [
          "272",
          "56",
          "71",
          "422"
        ],
        [
          "456",
          "122",
          "98",
          "566"
        ],
        [
          "416",
          "60",
          "65",
          "608"
        ],
        [
          "419",
          "127",
          "74",
          "537"
        ],
        [
          "446",
          "82",
          "64",
          "443"
        ],
        [
          "427",
          "43",
          "46",
          "324"
        ],
        [
          "735",
          "63",
          "41",
          "364"
        ],
        [
          "347",
          "62",
          "70",
          "360"
        ],
        [
          "392",
          "83",
          "54",
          "385"
        ],
        [
          "333",
          "72",
          "55",
          "508"
        ],
        [
          "354",
          "76",
          "51",
          "463"
        ],
        [
          "350",
          "57",
          "58",
          "425"
        ],
        [
          "405",
          "82",
          "80",
          "512"
        ],
        [
          "339",
          "63",
          "77",
          "443"
        ],
        [
          "402",
          "95",
          "66",
          "503"
        ],
        [
          "385",
          "87",
          "105",
          "472"
        ],
        [
          "349",
          "73",
          "51",
          "437"
        ],
        [
          "318",
          "49",
          "61",
          "415"
        ],
        [
          "308",
          "74",
          "68",
          "413"
        ]
      ],
      "quantile_0": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "quantile_1": [
        5,
        1,
        1,
        3,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0.5,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "quantile_2": [
        105.5,
        24,
        21,
        58,
        7,
        18,
        11,
        22,
        10,
        7,
        3,
        0,
        8,
        7,
        26,
        14,
        12.5,
        12,
        13,
        11,
        12,
        12,
        15,
        13
      ],
      "quantile_3": [
        1123,
        167,
        232.5,
        413,
        124.75,
        126,
        211.25,
        211,
        125,
        123.5,
        109.25,
        31,
        117,
        130.75,
        199,
        133.25,
        121,
        126.5,
        196,
        166.75,
        134,
        132,
        148.5,
        120
      ],
      "quantile_4": [
        2568,
        2911,
        3061,
        2997,
        2995,
        2928,
        2932,
        2767,
        2847,
        2859,
        2683,
        2740,
        2662,
        2596,
        2648,
        2562,
        2594,
        2557,
        2378,
        2388,
        2411,
        2466,
        2425,
        2366
      ]
    }
  ]
}