{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(if(arrayAll(x -> x = 0, age_levels), [], age_levels),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_4\nFROM\n(\n  SELECT\n    arrayJoin(arrayMap(x -> dateAdd(month, x + 1, toDate('2015-1-1')), range(toUInt64(dateDiff('month', toDate('2015-1-1'), toDate('2017-1-1')))))) AS time,\n    repo_id AS id, argMax(repo_name, time) AS name,\n    avgIf(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS avg,\n    quantileIf(0)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_0,quantileIf(0.25)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_1,quantileIf(0.5)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_2,quantileIf(0.75)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_3,quantileIf(1)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_4,\n    [countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 0 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 1 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 2 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 3 AND opened_at < time AND closed_at >= time)] AS age_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      minIf(created_at, action = 'opened') AS opened_at,\n      maxIf(created_at, action = 'closed') AS real_closed_at,\n      if(real_closed_at=toDate('1970-1-1'), toDate('2017-1-1'), real_closed_at) AS closed_at\n    FROM gh_events\n    WHERE type='PullRequestEvent' AND (org_id IN [1342004]) AND created_at < toDate('2017-1-1')\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at > toDate('1970-01-01')\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "month",
    "groupBy": null
  },
  "change_request_age_desc_3_all_null_month": [
    {
      "id": "27935901",
      "name": "google/bocado",
      "avg": [
        26,
        54,
        85,
        115,
        146,
        176,
        207,
        238,
        268,
        299,
        329,
        360,
        391,
        420,
        451,
        481,
        512,
        542,
        573,
        604,
        634,
        665,
        695,
        726
      ],
      "levels": [
        [
          "0",
          "1",
          "0",
          "0"
        ],
        [
          "0",
          "0",
          "1",
          "0"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ]
      ],
      "quantile_0": [
        26,
        54,
        85,
        115,
        146,
        176,
        207,
        238,
        268,
        299,
        329,
        360,
        391,
        420,
        451,
        481,
        512,
        542,
        573,
        604,
        634,
        665,
        695,
        726
      ],
      "quantile_1": [
        26,
        54,
        85,
        115,
        146,
        176,
        207,
        238,
        268,
        299,
        329,
        360,
        391,
        420,
        451,
        481,
        512,
        542,
        573,
        604,
        634,
        665,
        695,
        726
      ],
      "quantile_2": [
        26,
        54,
        85,
        115,
        146,
        176,
        207,
        238,
        268,
        299,
        329,
        360,
        391,
        420,
        451,
        481,
        512,
        542,
        573,
        604,
        634,
        665,
        695,
        726
      ],
      "quantile_3": [
        26,
        54,
        85,
        115,
        146,
        176,
        207,
        238,
        268,
        299,
        329,
        360,
        391,
        420,
        451,
        481,
        512,
        542,
        573,
        604,
        634,
        665,
        695,
        726
      ],
      "quantile_4": [
        26,
        54,
        85,
        115,
        146,
        176,
        207,
        238,
        268,
        299,
        329,
        360,
        391,
        420,
        451,
        481,
        512,
        542,
        573,
        604,
        634,
        665,
        695,
        726
      ]
    },
    {
      "id": "11430627",
      "name": "google/ansicolor-dart",
      "avg": [
        11,
        39,
        70,
        100,
        131,
        161,
        192,
        223,
        253,
        284,
        314,
        345,
        376,
        405,
        436,
        466,
        497,
        527,
        558,
        589,
        619,
        650,
        680,
        711
      ],
      "levels": [
        [
          "1",
          "0",
          "0",
          "0"
        ],
        [
          "0",
          "0",
          "1",
          "0"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "1"
        ]
      ],
      "quantile_0": [
        11,
        39,
        70,
        100,
        131,
        161,
        192,
        223,
        253,
        284,
        314,
        345,
        376,
        405,
        436,
        466,
        497,
        527,
        558,
        589,
        619,
        650,
        680,
        711
      ],
      "quantile_1": [
        11,
        39,
        70,
        100,
        131,
        161,
        192,
        223,
        253,
        284,
        314,
        345,
        376,
        405,
        436,
        466,
        497,
        527,
        558,
        589,
        619,
        650,
        680,
        711
      ],
      "quantile_2": [
        11,
        39,
        70,
        100,
        131,
        161,
        192,
        223,
        253,
        284,
        314,
        345,
        376,
        405,
        436,
        466,
        497,
        527,
        558,
        589,
        619,
        650,
        680,
        711
      ],
      "quantile_3": [
        11,
        39,
        70,
        100,
        131,
        161,
        192,
        223,
        253,
        284,
        314,
        345,
        376,
        405,
        436,
        466,
        497,
        527,
        558,
        589,
        619,
        650,
        680,
        711
      ],
      "quantile_4": [
        11,
        39,
        70,
        100,
        131,
        161,
        192,
        223,
        253,
        284,
        314,
        345,
        376,
        405,
        436,
        466,
        497,
        527,
        558,
        589,
        619,
        650,
        680,
        711
      ]
    },
    {
      "id": "23153880",
      "name": "google/novm",
      "avg": [
        16.5,
        31.67,
        62.67,
        92.67,
        123.67,
        153.67,
        184.67,
        215.67,
        245.67,
        276.67,
        306.67,
        337.67,
        368.67,
        397.67,
        428.67,
        458.67,
        489.67,
        519.67,
        550.67,
        581.67,
        611.67,
        642.67,
        672.67,
        703.67
      ],
      "levels": [
        [
          "1",
          "3",
          "0",
          "0"
        ],
        [
          "0",
          "2",
          "1",
          "0"
        ],
        [
          "0",
          "0",
          "2",
          "1"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "3"
        ]
      ],
      "quantile_0": [
        11,
        25,
        56,
        86,
        117,
        147,
        178,
        209,
        239,
        270,
        300,
        331,
        362,
        391,
        422,
        452,
        483,
        513,
        544,
        575,
        605,
        636,
        666,
        697
      ],
      "quantile_1": [
        15.5,
        25,
        56,
        86,
        117,
        147,
        178,
        209,
        239,
        270,
        300,
        331,
        362,
        391,
        422,
        452,
        483,
        513,
        544,
        575,
        605,
        636,
        666,
        697
      ],
      "quantile_2": [
        17.5,
        25,
        56,
        86,
        117,
        147,
        178,
        209,
        239,
        270,
        300,
        331,
        362,
        391,
        422,
        452,
        483,
        513,
        544,
        575,
        605,
        636,
        666,
        697
      ],
      "quantile_3": [
        18.5,
        35,
        66,
        96,
        127,
        157,
        188,
        219,
        249,
        280,
        310,
        341,
        372,
        401,
        432,
        462,
        493,
        523,
        554,
        585,
        615,
        646,
        676,
        707
      ],
      "quantile_4": [
        20,
        45,
        76,
        106,
        137,
        167,
        198,
        229,
        259,
        290,
        320,
        351,
        382,
        411,
        442,
        472,
        503,
        533,
        564,
        595,
        625,
        656,
        686,
        717
      ]
    }
  ]
}