{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(if(arrayAll(x -> x = 0, age_levels), [], age_levels),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_4\nFROM\n(\n  SELECT\n    arrayJoin(arrayMap(x -> dateAdd(month, x + 1, toDate('2015-1-1')), range(toUInt64(dateDiff('month', toDate('2015-1-1'), toDate('2017-1-1')))))) AS time,\n    org_id AS id, argMax(org_login, time) AS name,\n    avgIf(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS avg,\n    quantileIf(0)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_0,quantileIf(0.25)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_1,quantileIf(0.5)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_2,quantileIf(0.75)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_3,quantileIf(1)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_4,\n    [countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 0 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 1 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 2 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 3 AND opened_at < time AND closed_at >= time)] AS age_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      minIf(created_at, action = 'opened') AS opened_at,\n      maxIf(created_at, action = 'closed') AS real_closed_at,\n      if(real_closed_at=toDate('1970-1-1'), toDate('2017-1-1'), real_closed_at) AS closed_at\n    FROM gh_events\n    WHERE type='PullRequestEvent' AND (org_id IN [1342004]) AND created_at < toDate('2017-1-1')\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at > toDate('1970-01-01')\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "month",
    "groupBy": "org"
  },
  "change_request_age_desc_3_all_org_month": [
    {
      "id": "1342004",
      "name": "google",
      "avg": [
        11.84,
        21.68,
        30.96,
        40.41,
        54.79,
        62.73,
        72.63,
        79.52,
        91.78,
        101.29,
        116.41,
        127.18,
        135.66,
        148.82,
        160.6,
        169.13,
        177.65,
        185,
        199.43,
        206.03,
        214.77,
        230.42,
        238.67,
        252.01
      ],
      "levels": [
        [
          "81",
          "51",
          "0",
          "0"
        ],
        [
          "87",
          "45",
          "63",
          "0"
        ],
        [
          "92",
          "41",
          "68",
          "41"
        ],
        [
          "109",
          "40",
          "74",
          "94"
        ],
        [
          "92",
          "55",
          "70",
          "154"
        ],
        [
          "98",
          "75",
          "88",
          "193"
        ],
        [
          "105",
          "66",
          "104",
          "251"
        ],
        [
          "134",
          "68",
          "100",
          "310"
        ],
        [
          "119",
          "74",
          "116",
          "380"
        ],
        [
          "150",
          "69",
          "104",
          "446"
        ],
        [
          "115",
          "61",
          "122",
          "500"
        ],
        [
          "102",
          "83",
          "109",
          "587"
        ],
        [
          "157",
          "68",
          "88",
          "642"
        ],
        [
          "133",
          "69",
          "111",
          "677"
        ],
        [
          "109",
          "92",
          "110",
          "755"
        ],
        [
          "121",
          "73",
          "140",
          "819"
        ],
        [
          "140",
          "86",
          "108",
          "903"
        ],
        [
          "151",
          "96",
          "138",
          "938"
        ],
        [
          "139",
          "66",
          "139",
          "997"
        ],
        [
          "170",
          "73",
          "123",
          "1057"
        ],
        [
          "173",
          "76",
          "135",
          "1126"
        ],
        [
          "124",
          "88",
          "142",
          "1221"
        ],
        [
          "126",
          "115",
          "138",
          "1316"
        ],
        [
          "126",
          "104",
          "130",
          "1395"
        ]
      ],
      "quantile_0": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "quantile_1": [
        3,
        5,
        7.25,
        8,
        16,
        19,
        21,
        19,
        27,
        24,
        36,
        39,
        36.5,
        39.25,
        50,
        51,
        51,
        48,
        59,
        56.5,
        58,
        68,
        69.5,
        80
      ],
      "quantile_2": [
        10,
        18,
        24.5,
        32,
        46,
        49,
        57,
        63,
        73,
        80,
        95,
        104,
        109,
        127,
        137,
        144,
        142,
        152,
        165,
        171,
        175.5,
        186,
        196,
        208
      ],
      "quantile_3": [
        19,
        36,
        50.5,
        65,
        90,
        103.75,
        118,
        124.25,
        142,
        157,
        182,
        203,
        221,
        235.75,
        256,
        269,
        281,
        293.5,
        315,
        330.5,
        344.75,
        365,
        379.5,
        398
      ],
      "quantile_4": [
        30,
        58,
        89,
        119,
        150,
        179,
        210,
        241,
        271,
        302,
        332,
        363,
        394,
        423,
        454,
        484,
        515,
        545,
        576,
        607,
        637,
        668,
        698,
        729
      ]
    }
  ]
}