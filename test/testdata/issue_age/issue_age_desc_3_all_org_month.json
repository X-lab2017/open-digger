{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(if(arrayAll(x -> x = 0, age_levels), [], age_levels),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time)-1)) AS quantile_4\nFROM\n(\n  SELECT\n    arrayJoin(arrayMap(x -> dateAdd(month, x + 1, toDate('2015-1-1')), range(toUInt64(dateDiff('month', toDate('2015-1-1'), toDate('2017-1-1')))))) AS time,\n    org_id AS id, argMax(org_login, time) AS name,\n    avgIf(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS avg,\n    quantileIf(0)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_0,quantileIf(0.25)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_1,quantileIf(0.5)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_2,quantileIf(0.75)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_3,quantileIf(1)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_4,\n    [countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 0 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 1 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 2 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 3 AND opened_at < time AND closed_at >= time)] AS age_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      minIf(created_at, action = 'opened') AS opened_at,\n      maxIf(created_at, action = 'closed') AS real_closed_at,\n      if(real_closed_at=toDate('1970-1-1'), toDate('2017-1-1'), real_closed_at) AS closed_at\n    FROM gh_events\n    WHERE type='IssuesEvent' AND (org_id IN [1342004]) AND created_at < toDate('2017-1-1')\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at > toDate('1970-01-01')\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "month",
    "groupBy": "org"
  },
  "issue_age_desc_3_all_org_month": [
    {
      "id": "1342004",
      "name": "google",
      "avg": [
        13.06,
        25.02,
        35.43,
        47.55,
        55.37,
        71.47,
        82.35,
        95.34,
        109.1,
        124.02,
        138.3,
        111.16,
        114.68,
        136.47,
        156.85,
        177.13,
        198.47,
        216.25,
        237.11,
        256.35,
        273.73,
        292.18,
        310.36,
        329.66
      ],
      "levels": [
        [
          "215",
          "150",
          "4",
          "0"
        ],
        [
          "228",
          "196",
          "266",
          "0"
        ],
        [
          "351",
          "195",
          "342",
          "240"
        ],
        [
          "343",
          "222",
          "431",
          "537"
        ],
        [
          "293",
          "613",
          "452",
          "908"
        ],
        [
          "307",
          "268",
          "782",
          "1267"
        ],
        [
          "393",
          "398",
          "460",
          "1965"
        ],
        [
          "427",
          "324",
          "630",
          "2301"
        ],
        [
          "377",
          "320",
          "626",
          "2800"
        ],
        [
          "362",
          "310",
          "543",
          "3304"
        ],
        [
          "361",
          "273",
          "578",
          "3721"
        ],
        [
          "1433",
          "1536",
          "569",
          "4149"
        ],
        [
          "907",
          "1225",
          "2835",
          "4493"
        ],
        [
          "386",
          "260",
          "2008",
          "7189"
        ],
        [
          "417",
          "333",
          "536",
          "8966"
        ],
        [
          "350",
          "337",
          "652",
          "9377"
        ],
        [
          "342",
          "294",
          "584",
          "9868"
        ],
        [
          "422",
          "368",
          "531",
          "10275"
        ],
        [
          "385",
          "302",
          "642",
          "10481"
        ],
        [
          "400",
          "336",
          "576",
          "10864"
        ],
        [
          "456",
          "346",
          "592",
          "11043"
        ],
        [
          "381",
          "347",
          "629",
          "11493"
        ],
        [
          "372",
          "316",
          "606",
          "11959"
        ],
        [
          "298",
          "324",
          "603",
          "12360"
        ]
      ],
      "quantile_0": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "quantile_1": [
        5,
        10.25,
        12,
        18,
        24,
        36.75,
        31,
        40,
        45,
        55,
        61,
        17,
        35,
        56,
        85,
        109,
        133,
        149,
        158,
        168,
        169,
        173,
        176,
        189
      ],
      "quantile_2": [
        12,
        24,
        33,
        42,
        43,
        56,
        85,
        94,
        100,
        116,
        132,
        78,
        56,
        84,
        108,
        138,
        167,
        192,
        222,
        248,
        278,
        302,
        331,
        361
      ],
      "quantile_3": [
        19,
        39,
        56,
        73,
        87,
        104,
        123,
        138,
        157,
        177,
        207,
        192,
        191.25,
        210,
        227,
        250,
        279,
        289,
        308,
        327,
        353,
        369,
        391,
        408
      ],
      "quantile_4": [
        31,
        59,
        90,
        120,
        151,
        181,
        212,
        243,
        273,
        304,
        334,
        365,
        396,
        425,
        456,
        486,
        517,
        547,
        578,
        609,
        639,
        670,
        700,
        731
      ]
    }
  ]
}