{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time)-1)) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(if(arrayAll(x -> x = 0, age_levels), [], age_levels),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time)-1)) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time)-1)) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time)-1)) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time)-1)) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time)-1)) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('quarter', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('quarter', toStartOfQuarter(toDate('2015-1-1')), time)-1)) AS quantile_4\nFROM\n(\n  SELECT\n    arrayJoin(arrayMap(x -> dateAdd(quarter, x + 1, toDate('2015-1-1')), range(toUInt64(dateDiff('quarter', toDate('2015-1-1'), toDate('2017-1-1')))))) AS time,\n    repo_id AS id, argMax(repo_name, time) AS name,\n    avgIf(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS avg,\n    quantileIf(0)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_0,quantileIf(0.25)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_1,quantileIf(0.5)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_2,quantileIf(0.75)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_3,quantileIf(1)(dateDiff('day', opened_at, time), opened_at < time AND closed_at >= time) AS quantile_4,\n    [countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 0 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 1 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 2 AND opened_at < time AND closed_at >= time),countIf(multiIf(dateDiff('day', opened_at, time) <= 15, 0,dateDiff('day', opened_at, time) <= 30, 1,dateDiff('day', opened_at, time) <= 60, 2, 3) = 3 AND opened_at < time AND closed_at >= time)] AS age_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      minIf(created_at, action = 'opened') AS opened_at,\n      maxIf(created_at, action = 'closed') AS real_closed_at,\n      if(real_closed_at=toDate('1970-1-1'), toDate('2017-1-1'), real_closed_at) AS closed_at\n    FROM gh_events\n    WHERE type='IssuesEvent' AND (org_id IN [1342004]) AND created_at < toDate('2017-1-1')\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at > toDate('1970-01-01')\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "quarter",
    "groupBy": null
  },
  "issue_age_desc_3_all_null_quarter": [
    {
      "id": "28146708",
      "name": "google/test_runner.dart",
      "avg": [
        63.73,
        154.73,
        246.73,
        338.73,
        432.8,
        523.8,
        615.8,
        707.8
      ],
      "levels": [
        [
          "0",
          "0",
          "4",
          "7"
        ],
        [
          "0",
          "0",
          "0",
          "11"
        ],
        [
          "0",
          "0",
          "0",
          "11"
        ],
        [
          "0",
          "0",
          "0",
          "11"
        ],
        [
          "0",
          "0",
          "0",
          "10"
        ],
        [
          "0",
          "0",
          "0",
          "10"
        ],
        [
          "0",
          "0",
          "0",
          "10"
        ],
        [
          "0",
          "0",
          "0",
          "10"
        ]
      ],
      "quantile_0": [
        33,
        124,
        216,
        308,
        400,
        491,
        583,
        675
      ],
      "quantile_1": [
        38.5,
        129.5,
        221.5,
        313.5,
        415,
        506,
        598,
        690
      ],
      "quantile_2": [
        73,
        164,
        256,
        348,
        440,
        531,
        623,
        715
      ],
      "quantile_3": [
        84,
        175,
        267,
        359,
        450,
        541,
        633,
        725
      ],
      "quantile_4": [
        84,
        175,
        267,
        359,
        450,
        541,
        633,
        725
      ]
    },
    {
      "id": "11430627",
      "name": "google/ansicolor-dart",
      "avg": [
        66,
        157,
        249,
        341,
        432,
        523,
        615,
        707
      ],
      "levels": [
        [
          "0",
          "0",
          "0",
          "2"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ],
        [
          "0",
          "0",
          "0",
          "2"
        ]
      ],
      "quantile_0": [
        63,
        154,
        246,
        338,
        429,
        520,
        612,
        704
      ],
      "quantile_1": [
        64.5,
        155.5,
        247.5,
        339.5,
        430.5,
        521.5,
        613.5,
        705.5
      ],
      "quantile_2": [
        66,
        157,
        249,
        341,
        432,
        523,
        615,
        707
      ],
      "quantile_3": [
        67.5,
        158.5,
        250.5,
        342.5,
        433.5,
        524.5,
        616.5,
        708.5
      ],
      "quantile_4": [
        69,
        160,
        252,
        344,
        435,
        526,
        618,
        710
      ]
    },
    {
      "id": "12229701",
      "name": "google/hesokuri",
      "avg": [
        61.75,
        152.75,
        244.75,
        336.75,
        427.75,
        518.75,
        610.75,
        702.75
      ],
      "levels": [
        [
          "0",
          "1",
          "0",
          "3"
        ],
        [
          "0",
          "0",
          "0",
          "4"
        ],
        [
          "0",
          "0",
          "0",
          "4"
        ],
        [
          "0",
          "0",
          "0",
          "4"
        ],
        [
          "0",
          "0",
          "0",
          "4"
        ],
        [
          "0",
          "0",
          "0",
          "4"
        ],
        [
          "0",
          "0",
          "0",
          "4"
        ],
        [
          "0",
          "0",
          "0",
          "4"
        ]
      ],
      "quantile_0": [
        16,
        107,
        199,
        291,
        382,
        473,
        565,
        657
      ],
      "quantile_1": [
        61.75,
        152.75,
        244.75,
        336.75,
        427.75,
        518.75,
        610.75,
        702.75
      ],
      "quantile_2": [
        77,
        168,
        260,
        352,
        443,
        534,
        626,
        718
      ],
      "quantile_3": [
        77,
        168,
        260,
        352,
        443,
        534,
        626,
        718
      ],
      "quantile_4": [
        77,
        168,
        260,
        352,
        443,
        534,
        626,
        718
      ]
    }
  ]
}