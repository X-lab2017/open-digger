{
  "sql":"\nSELECT\n  id,\n  argMax(name, time),\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(avg, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS avg,\n  groupArrayInsertAt(\n    [],\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(resolution_levels,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS levels,\n  groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_0, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_0,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_1, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_1,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_2, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_2,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_3, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_3,groupArrayInsertAt(\n    NaN,\n    toUInt32(dateDiff('month', toDate('2015-1-1'), toDate('2016-12-1'))) + 1)(ROUND(quantile_4, 2),\n    toUInt32(dateDiff('month', toDate('2015-1-1'), time))) AS quantile_4\nFROM\n(\n  SELECT\n    toStartOfMonth(opened_at) AS time,\n    org_id AS id, argMax(org_login, time) AS name,\n    avg(resolution_duration) AS avg,\n    quantile(0)(resolution_duration) AS quantile_0,quantile(0.25)(resolution_duration) AS quantile_1,quantile(0.5)(resolution_duration) AS quantile_2,quantile(0.75)(resolution_duration) AS quantile_3,quantile(1)(resolution_duration) AS quantile_4,\n    [countIf(resolution_level = 0),countIf(resolution_level = 1),countIf(resolution_level = 2),countIf(resolution_level = 3)] AS resolution_levels\n  FROM\n  (\n    SELECT\n      repo_id,\n      argMax(repo_name, created_at) AS repo_name,\n      org_id,\n      argMax(org_login, created_at) AS org_login,\n      issue_number,\n      argMaxIf(action, created_at, action IN ('opened', 'closed' , 'reopened')) AS last_action,\n      argMax(issue_created_at,created_at) AS opened_at,\n      maxIf(created_at, action = 'closed') AS closed_at,\n      dateDiff('day', opened_at, closed_at) AS resolution_duration,\n      multiIf(resolution_duration <= 3, 0,resolution_duration <= 7, 1,resolution_duration <= 15, 2, 3) AS resolution_level\n    FROM gh_events\n    WHERE type = 'PullRequestEvent' AND pull_merged = 1 AND (org_id IN [1342004])\n    GROUP BY repo_id, org_id, issue_number\n    HAVING opened_at >= toDate('2015-1-1') AND opened_at < toDate('2017-1-1') AND last_action='closed'\n  )\n  GROUP BY id, time\n  \n)\nGROUP BY id\nORDER BY avg[-1] DESC\n    LIMIT 3",
  "modifiedOption": {
    "orgIds": [
      1342004
    ],
    "startYear": 2015,
    "endYear": 2016,
    "startMonth": 1,
    "endMonth": 12,
    "order": "DESC",
    "limit": 3,
    "limitOption": "all",
    "groupTimeRange": "month",
    "groupBy": "org"
  },
  "change_requests_duration_desc_3_all_org_month": [
    {
      "id": "1342004",
      "name": "google",
      "avg": [
        8.62,
        8.82,
        13.21,
        7.85,
        10.09,
        13.64,
        13.03,
        6.8,
        7.75,
        10.66,
        6.83,
        9.14,
        10.88,
        6.82,
        10.42,
        13.44,
        6.57,
        6.51,
        7.76,
        8.87,
        9.16,
        9.6,
        7.74,
        8.5
      ],
      "levels": [
        [
          "360",
          "31",
          "26",
          "33"
        ],
        [
          "464",
          "36",
          "21",
          "33"
        ],
        [
          "453",
          "55",
          "26",
          "47"
        ],
        [
          "641",
          "67",
          "34",
          "41"
        ],
        [
          "617",
          "57",
          "20",
          "47"
        ],
        [
          "434",
          "52",
          "37",
          "48"
        ],
        [
          "611",
          "75",
          "31",
          "60"
        ],
        [
          "714",
          "75",
          "43",
          "58"
        ],
        [
          "770",
          "72",
          "26",
          "63"
        ],
        [
          "658",
          "68",
          "40",
          "64"
        ],
        [
          "467",
          "68",
          "42",
          "42"
        ],
        [
          "491",
          "62",
          "46",
          "68"
        ],
        [
          "530",
          "72",
          "45",
          "56"
        ],
        [
          "706",
          "69",
          "39",
          "46"
        ],
        [
          "538",
          "58",
          "32",
          "53"
        ],
        [
          "561",
          "60",
          "34",
          "64"
        ],
        [
          "663",
          "81",
          "30",
          "44"
        ],
        [
          "828",
          "75",
          "56",
          "67"
        ],
        [
          "659",
          "68",
          "37",
          "47"
        ],
        [
          "805",
          "102",
          "50",
          "72"
        ],
        [
          "772",
          "91",
          "64",
          "49"
        ],
        [
          "761",
          "73",
          "45",
          "55"
        ],
        [
          "649",
          "64",
          "52",
          "74"
        ],
        [
          "777",
          "87",
          "51",
          "92"
        ]
      ],
      "quantile_0": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "quantile_1": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "quantile_2": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "quantile_3": [
        2,
        1,
        3,
        2,
        1,
        3,
        3,
        2.75,
        1.5,
        2,
        3,
        4,
        3,
        2,
        2,
        3,
        2,
        2,
        2,
        3,
        2,
        2,
        3,
        3
      ],
      "quantile_4": [
        1556,
        1152,
        2024,
        1648,
        1168,
        1950,
        2326,
        720,
        1721,
        933,
        847,
        582,
        1169,
        852,
        1336,
        1731,
        583,
        1074,
        576,
        1042,
        1434,
        1431,
        636,
        561
      ]
    }
  ]
}